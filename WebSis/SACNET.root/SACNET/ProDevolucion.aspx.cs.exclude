using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using Britanico.SacNet.BusinessLogic;
using Oxinet.Tools;
using Britanico.SacNet.BusinessEntities;
using System.Collections.Generic;
using System.IO;

public partial class ProDevolucion : System.Web.UI.Page
{
    #region --- EVENTOS DE FORMULARIO ---
    
    protected void Page_Load(object sender, EventArgs e)
    {
        Auditoria1.CargarSeguridadInicio();
        this.MessageBox1.OnConfirmClick += new EventHandler(MessageBox1_OnConfirmClick);
        if (!IsPostBack)
        {
            labelFechaDevolucionDato.Text = DateTime.Now.ToLongDateString();
            labelFechaDevEstimada.Text = string.Empty;
            ButtonDevolucion.ImageUrl = "~/Comun/Imagenes/Botones/Grabar_I.jpg";
            ButtonDevolucion.Enabled = false;
        }
        Seguridad();
        Page.Title = lblTituloPagina.Text;
    }
    
    #endregion

    #region --- EVENTOS DE LOS CONTROLES ---

    void MessageBox1_OnConfirmClick(object sender, EventArgs e)
    {
        if (MessageBox1.Evento() == HelpEvento.Guardar.ToString())
        {
            ConfirmarDevolucionDe_Usuario();
        }
    }

    protected void TextBoxCodigoEjemplar_TextChanged(object sender, EventArgs e)
    {
        EjemplarParaDevolucion();
    }

    protected void UpdatePanelJavaScriptExtender1_Update(object Sender, EventArgs E, string parameter)
    {
        if (parameter.Trim() != "")
        {
            string[] Valores = parameter.Split(new char[] { '&' });
            if (Valores[0].ToString() == "")
            {

            }
        }
    }

    protected void ButtonDevolucion_Click(object sender, EventArgs e)
    {
        string mensaje = Validar();
        if (mensaje == "")
        {
            MessageBox1.ShowConfirm("¿ Confirma la devolución del ejemplar  ?", HelpEvento.Guardar.ToString());
        }
        else
        {
            MessageBox1.ShowInfo(mensaje);
        }
    }

    #endregion

    #region --- MÉTODOS DEL PROGRAMADOR ---

    private void EjemplarParaDevolucion()
    {
        if (this.Master.HelpUsuariosSAC().CodLocalSAC == null || this.Master.HelpUsuariosSAC().CodLocalSAC.Trim() == string.Empty)
        {
            MessageBox1.ShowWarning("¡ Usuario del sistema no puede realizar la operación de devolución, no esta asignado a un SAC. !");
            Auditoria1.CargarSeguridadInicio();
            TextBoxCodigoEjemplar.Enabled = false;
            ButtonDevolucion.Enabled = false;
            ButtonDevolucion.ImageUrl = "~/Comun/Imagenes/Botones/Grabar_I.jpg";
            pnlUsuario.Visible = true;
            pnlUsuario.Visible = false;
        }
        else
        {
            ItemEjemplarLogic oItemEjemplarLogic = new ItemEjemplarLogic();
            ReturnValor oReturnValor = new ReturnValor();

            Prestamo itemPrestamo = new Prestamo();
            oReturnValor = oItemEjemplarLogic.DetectarEjemplarEnPrestamo(TextBoxCodigoEjemplar.Text, ref itemPrestamo);

            if (itemPrestamo.sCodPrestamo != null)
            {
                ucItem1.CargarDatosDeItemEjemplar(TextBoxCodigoEjemplar.Text);
                HF_FechaDevEstimada.Value = itemPrestamo.dFechaDevolucionEstimada.Value.ToShortDateString();
                HF_CodPrestamo.Value = itemPrestamo.sCodPrestamo;
                HF_CodUsuario.Value = itemPrestamo.sCodUsuarioSAC;
                HF_CentroPrestamo.Value = itemPrestamo.sCodSac.Trim();
                labelFechaDevEstimada.Text = itemPrestamo.dFechaDevolucionEstimada.Value.ToLongDateString();

                ucUsuario1.prm_CodUsuarioSAC = itemPrestamo.sCodUsuarioSAC;
                ucUsuario1.CargarDatosDeUsuarioSAC();
                Auditoria1.CargarSeguridad(itemPrestamo.SSIUsuario_Creacion, itemPrestamo.SSIUsuario_Modificacion, itemPrestamo.SSIFechaHora_Creacion, itemPrestamo.SSIFechaHora_Modificacion, itemPrestamo.SSIHost);
                pnlItem.Visible = true;
                pnlUsuario.Visible = true;
                ButtonDevolucion.Enabled = true;
                ButtonDevolucion.ImageUrl = "~/Comun/Imagenes/Botones/Grabar_A.jpg";
            }
            else
            {
                MessageBox1.ShowInfo("¡ El código de ejemplar ingresado no está como préstamo! ");
                HF_FechaDevEstimada.Value = string.Empty;
                HF_CodPrestamo.Value = string.Empty;
                HF_CodUsuario.Value = string.Empty;
                ucUsuario1.prm_CodUsuarioSAC = itemPrestamo.sCodUsuarioSAC;
                ucUsuario1.CargarDatosDeUsuarioSAC();
                pnlItem.Visible = false;
                pnlUsuario.Visible = false;
                ButtonDevolucion.Enabled = false;
                ButtonDevolucion.ImageUrl = "~/Comun/Imagenes/Botones/Grabar_I.jpg";
                labelFechaDevEstimada.Text = string.Empty;
            }
        }
    }
    
    private string Validar()
    {
        string mensage = "";
        Label lblCodEjemp = null;
        lblCodEjemp = ucItem1.FindControl("LabelEstadoEjemplarCOD") as Label;

        if (HF_CodPrestamo.Value == "") mensage = mensage + "¡ No se ha encontrado el registro de préstamo !" + "</br>";
        if (HF_CodUsuario.Value == "") mensage = mensage + "¡ No se ha encontrado el código de usuario !" + "</br>";
        if (HF_FechaDevEstimada.Value == "") mensage = mensage + "¡ No se ha encontrado la fecha de devolución estimada !" + "</br>";
        if (TextBoxCodigoEjemplar.Text == "") mensage = mensage + "¡ Ingresar código de ejemplar a devolver !" + "</br>";
        if (this.Master.HelpUsuariosSAC().CodLocalSAC == null || this.Master.HelpUsuariosSAC().CodLocalSAC.Trim() == string.Empty)
            mensage = mensage + "¡ Usuario no puede realizar la operación de devolución, no esta asignado a un SAC !" + "</br>";
        if (mensage.Length > 0)
            mensage = mensage.Substring(2);
        return mensage;
    }

    private void ConfirmarDevolucionDe_Usuario()
    {
        Prestamo itemPrestamo;
        Label lblCodSAC = null;
        lblCodSAC = ucUsuario1.FindControl("TextBoxCodSAC") as Label;
        itemPrestamo = new Prestamo
        {
            sCodPrestamo = HF_CodPrestamo.Value,
            sCodUsuarioSAC = HF_CodUsuario.Value,
            sCodEjemplar = TextBoxCodigoEjemplar.Text,
            sCodSacDevuelto = this.Master.HelpUsuariosSAC().CodLocalSAC.Trim(),
            SSIUsuario_Modificacion = this.Master.HelpUsuario().LoginUsuario,
            SSIHost = Context.Request.UserHostName,
            dFechaDevolucionEstimada = Convert.ToDateTime(HF_FechaDevEstimada.Value),
            dFechaDevolucionReal = DateTime.Now,
            sCodSac = HF_CentroPrestamo.Value,
        };

        ReturnValor oReturnValor = new ReturnValor();
        PrestamoLogic oPrestamoLogic = new PrestamoLogic();
        DateTime FechaFinSuspension = itemPrestamo.dFechaDevolucionReal.Value.AddDays(Util.DiasDePrestamo(itemPrestamo.dFechaDevolucionReal.Value, Convert.ToInt32(HelpConfiguration.AppSettings(HelpConfiguration.AppSett.DefaultDiasSuspendido)), Convert.ToInt32(HelpConfiguration.AppSettings(HelpConfiguration.AppSett.DefaultDiasToleran)), false));

        // Actualiza el registro de prestamo en la Devolución REAL
        oReturnValor = oPrestamoLogic.ActualizarOperaciones(itemPrestamo, PrestamoLogic.TipoDeOperacion.OperDevolucion, FechaFinSuspension);
        
        string OTRO_SAC = string.Empty;
        if (oReturnValor.Exitosa)
        {
            bool ESTA_RESERVADO = false;
            ItemEjemplar yItemEjemplar = new ItemEjemplar();
            yItemEjemplar = new ItemEjemplarLogic().Buscar(itemPrestamo.sCodEjemplar, itemPrestamo.sCodSac);

            Reserva miReservaDeEjemplar = new Reserva();
            miReservaDeEjemplar = oPrestamoLogic.BuscarReservasSolicitadas(string.Empty, yItemEjemplar.sCodItem, string.Empty);
            if (miReservaDeEjemplar.sCodReserva != null)
            {
                Prestamo itemResPrestamo = new Prestamo();
                ReturnValor ogpReturnValor = new ReturnValor();
                ogpReturnValor = GuardarReservaEn_Prestamo(miReservaDeEjemplar, itemPrestamo.sCodEjemplar, ref itemResPrestamo);

                if (itemPrestamo.sCodSac == itemPrestamo.sCodSacDevuelto)
                {
                    ESTA_RESERVADO = AvisarPorEmailSiEstaReservado(itemPrestamo, itemResPrestamo, yItemEjemplar, miReservaDeEjemplar);
                }
                else
                    OTRO_SAC = "¡ El ejemplar no se esta devolviendo en su SAC de orígen !";

                if (oReturnValor.Exitosa)
                {
                    TextBoxCodigoEjemplar.Text = string.Empty;
                    ucItem1.CargarDatosDeItemEjemplar(TextBoxCodigoEjemplar.Text);
                    EjemplarParaDevolucion();
                    if (ESTA_RESERVADO)
                        MessageBox1.ShowSuccess(oReturnValor.Message + "</br>" + OTRO_SAC);
                    else
                        MessageBox1.ShowSuccess(oReturnValor.Message + "</br>" + OTRO_SAC);
                }
                else
                    MessageBox1.ShowWarning(oReturnValor.Message);
            }
            else
            {
                TextBoxCodigoEjemplar.Text = string.Empty;
                ucItem1.CargarDatosDeItemEjemplar(TextBoxCodigoEjemplar.Text);
                EjemplarParaDevolucion();
                MessageBox1.ShowSuccess(oReturnValor.Message + "</br>" + OTRO_SAC);
            }
        }
        else
            MessageBox1.ShowWarning(oReturnValor.Message);

    }

    private ReturnValor GuardarReservaEn_Prestamo(Reserva miReservaDeEjemplar, string prmsCodEjemplar, ref Prestamo itemPrestamo)
    {
        Prestamo yPrestamoReserva = new Prestamo();
        Prestamo xitemPrestamo;
        Label lblCodSAC = null;
        Label lblCodPres = null;
        lblCodSAC = ucUsuario1.FindControl("TextBoxCodSAC") as Label;
        lblCodPres = ucItem1.FindControl("LabelTipoPrestamoCOD") as Label;
        xitemPrestamo = new Prestamo
        {
            sCodUsuarioSAC = miReservaDeEjemplar.sCodUsuarioSAC,
            sCodEjemplar = prmsCodEjemplar,
            sCodSac = this.Master.HelpUsuariosSAC().CodLocalSAC,
            sCodSacUsuario = lblCodSAC.Text,
            SSIUsuario_Creacion = this.Master.HelpUsuario().LoginUsuario,
            SSIUsuario_Modificacion = this.Master.HelpUsuario().LoginUsuario,
            SSIHost = Context.Request.UserHostName,
        };

        ReturnValor oReturnValor = new ReturnValor();
        PrestamoLogic oPrestamoLogic = new PrestamoLogic();

        oReturnValor = oPrestamoLogic.RegistrarOperaciones(xitemPrestamo, PrestamoLogic.TipoDeOperacion.OperReserva);

        if (oReturnValor.Exitosa)
            yPrestamoReserva = oPrestamoLogic.Buscar(oReturnValor.CodigoRetorno);

        itemPrestamo = yPrestamoReserva;

        return oReturnValor;
    }

    private bool AvisarPorEmailSiEstaReservado(Prestamo itemPrestamo, Prestamo itemRSVPrestamo, ItemEjemplar yItemEjemplar, Reserva miReservaDeEjemplar)
    {
        ReturnValor oReturnValor = new ReturnValor();
        PrestamoLogic oPrestamoLogic = new PrestamoLogic();
        bool ESTA_RESERVADO = false;
        labelFechaDevEstimada.Text = string.Empty;

        if (itemRSVPrestamo.sCodPrestamo != null)
        {
            if (itemRSVPrestamo.sCodPrestamo != itemPrestamo.sCodPrestamo)
            {

                // 2do paso: Actualiza solo la fecha de inicio con el codPrestamo
                bool SUCEDIDO = oPrestamoLogic.ActivarReservaDePrestamo(itemRSVPrestamo.sCodPrestamo).Exitosa;

                itemRSVPrestamo = oPrestamoLogic.Buscar(itemRSVPrestamo.sCodPrestamo);

                ReturnValor vReturnValor = new ReturnValor();
                miReservaDeEjemplar.sCodPrestamo = itemRSVPrestamo.sCodPrestamo;
                miReservaDeEjemplar.SSIUsuario_Modificacion = this.Master.HelpUsuario().LoginUsuario;
                vReturnValor = oPrestamoLogic.ActualizarReserva(miReservaDeEjemplar);

                oReturnValor.Message = oReturnValor.Message + "¡ El ejemplar que se está devolviendo está en reserva !";
                ESTA_RESERVADO = true;
                vwDatosVistaLogic ovwDatosVistaLogic = new vwDatosVistaLogic();
                vwUsuariosSAC itemvwUsuariosSAC = new vwUsuariosSAC();
                itemvwUsuariosSAC = ovwDatosVistaLogic.Buscarvw_UsuariosSAC(itemRSVPrestamo.sCodUsuarioSAC);

                List<HelpMailDatos> listaHelpMailDatos = new List<HelpMailDatos>();
                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Código de reserva: ", descripcion = itemPrestamo.sCodPrestamo });
                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Código de ejemplar: ", descripcion = itemPrestamo.sCodEjemplar });
                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Código de ítem: ", descripcion = itemRSVPrestamo.sCodEjemplarCodigoItem });
                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Titulo : ", descripcion = itemRSVPrestamo.sCodEjemplarNombreTitulo });
                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Fecha solicitada : ", descripcion = itemRSVPrestamo.dFechaSolicitudReserva.Value.ToLongDateString() });

                double dDIAS_VIGENCIA = (double)Util.DiasDePrestamo(itemRSVPrestamo.dFechaInicioReserva.Value,
                                                                Convert.ToInt32(HelpConfiguration.AppSettings(HelpConfiguration.AppSett.DefaultDiasReservaVigen)),
                                                                0, false);

                listaHelpMailDatos.Add(new HelpMailDatos { titulo = "Fecha vencimiento : ", descripcion = itemRSVPrestamo.dFechaInicioReserva.Value.AddDays(dDIAS_VIGENCIA).ToLongDateString() });
                string EMAIL = HelpMail.CrearBody("Reserva de ejemplar disponible", listaHelpMailDatos, "Ya puede acercarse a realizar su préstamo de ejemplar", "BRITANICO");

                if (HelpMail.IsValidEmail(itemvwUsuariosSAC.CorreoElectronico))
                    HelpMail.Enviar("SACNET: Ejemplar reservado", EMAIL, itemvwUsuariosSAC.CorreoElectronico);
            }
        }
        return ESTA_RESERVADO;
    }

    

    private void Seguridad()
    {
        RolesOpciones oRolesOpciones = this.Master.HelpOpcion_Permiso("ProDevolucion.aspx");
        if (oRolesOpciones != null)
        {
            lblTituloPagina.Text = oRolesOpciones.CodigoOpcionNombre;
            Page.Title = lblTituloPagina.Text;
            ButtonDevolucion.Visible = oRolesOpciones.Flag_Nuevo;
        }
        else
        {
            Response.Redirect("Login.aspx");
        }
    }

    #endregion

}
